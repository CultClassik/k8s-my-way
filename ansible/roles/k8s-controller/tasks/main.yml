---
- name: Get hosts for etcd initial cluster
  set_fact:
    k8sEtcdHosts: >-
      {% set comma = joiner(",") %}{% for item in groups['k8s_etcd'] -%}
        {{ comma() }}https://{{ hostvars[item]["ansible_"+hostvars[item]["private_if"]].ipv4.address }}:2379
      {%- endfor %}

- name: Output of hostnames/IPs used for etcd initial cluster
  debug: var=k8sEtcdHosts

- name: Install binaries
  include_tasks: binaries.yml

- name: Create k8s directories
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
  loop:
    - /etc/kubernetes/config
    - /var/lib/kubernetes

- name: Copy controller certs
  copy:
    src: "{{ cert_dir }}/{{ item }}"
    dest: "/var/lib/kubernetes/{{ item }}"
  loop:
    - ca.pem
    - ca-key.pem
    - kubernetes-key.pem
    - kubernetes.pem
    - service-account-key.pem
    - service-account.pem
    - encryption-config.yaml
    - etcd.pem
    - etcd-key.pem

- name: Copy kube conf files
  copy:
    src: "{{ cert_dir }}/{{ item }}"
    dest: "/var/lib/kubernetes/{{ item }}"
  loop: 
    - admin.kubeconfig
    - kube-controller-manager.kubeconfig
    - kube-scheduler.kubeconfig

- name: Create and start controller services
  include_tasks: services.yml

- name: Configure RBAC files
  file:
    src: "{{item}}"
    dest: "/var/lib/kubernetes/{{item}}"
    state: file
    owner: root
    group: root
  loop:
  - rbac_clusterrole.yml
  - rbac_clusterrolebinding.yml
  notify: Apply yaml {{ item }}

- name: Create kube scheduler config file
  template:
    src: kube-scheduler.yml.j2
    dest: /etc/kubernetes/config/kube-scheduler.yml
